using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace WebApplication2.Controllers
{
    [ApiController]
    [Route("[controller]")]
    public class WeatherForecastController : ControllerBase
    {

        private readonly ILogger<WeatherForecastController> _logger;

        public WeatherForecastController(ILogger<WeatherForecastController> logger)
        {
            _logger = logger;
        }

        private static readonly string[] Summaries = new[]
        {
            "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"
        };

        private static List<WeatherForecast> forecasts = new List<WeatherForecast>();//List that will serve us for the post method instead of db

        [HttpGet]
        public ActionResult<IEnumerable<WeatherForecast>> Get()
        {
            var rng = new Random();
            return Enumerable.Range(1, 5).Select(index => new WeatherForecast
            {
                Id = index,
                Date = DateTime.Now.AddDays(index),
                TemperatureC = rng.Next(-20, 55),
                Summary = Summaries[rng.Next(Summaries.Length)]
            })
            .ToArray();
        }

        [HttpGet("Forecasts/{id}")]
        public ActionResult<WeatherForecast> GetForecastById(int id)
        {
            WeatherForecast forecast = forecasts.FirstOrDefault(f => f.Id == id);
            if (forecasts == null)
                return NotFound();

            return Ok(forecast);
        }


        [HttpPost]
        public ActionResult<WeatherForecast> Post(WeatherForecast forecast)
        {
            forecasts.Add(forecast);
          
            return Created("", forecast);
        }
    }
}

